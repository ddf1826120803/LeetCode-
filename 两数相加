比较简单，考虑好进位即可，代码如下：
  
  public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode head = new ListNode(0);
        int carry = 0;
        ListNode l1_tamp = l1,l2_tamp = l2;
        ListNode curr = head;
        while(l1_tamp!=null||l2_tamp!=null){
            int x = (l1_tamp != null) ? l1_tamp.val : 0;
            int y = (l2_tamp != null) ? l2_tamp.val : 0;
            int sum = carry+x+y;
            carry = sum/10;   //进位
            curr.next = new ListNode(sum%10);   //当前位的值
            curr = curr.next;
            if(l1_tamp!=null){
                l1_tamp = l1_tamp.next;
            }
            if(l2_tamp != null){
                l2_tamp = l2_tamp.next;
            }
       }
        if(carry >0)
            curr.next = new ListNode(carry);   //考虑最后一位是否需要进位
        }
        return head.next;
    }
    
    
    时间复杂度：
        O(max(a,b)),a,b分别表示l1和l2的长度。
    空间复杂度：
        O(max(a,b)),最长为max(a,b)+1
